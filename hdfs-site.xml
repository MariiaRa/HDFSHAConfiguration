<configuration>
    <property>
        <name>dfs.data.dir</name>
        <value>/opt/hadoop/dfs/name/data</value>
        <final>true</final>
        <description>Determines where on the local filesystem an DFS data node should store its blocks. If this is a comma-delimited list of    directories, then data will be stored in all named directories, typically on different devices. Directories that do not exist are ignored.
        </description>
    </property>
    <property>
        <name>dfs.name.dir</name>
        <value>/opt/hadoop/dfs/name</value>
        <final>true</final>
        <description>Determines where on the local filesystem the DFS name node should store the name table(fsimage). If this is a comma-delimited list of directories then the name table is replicated in all of the directories, for redundancy.
        </description>
        </property>
    <property>
        <name>dfs.ha.automatic-failover.enabled</name>
        <value>true</value>
        <description>Whether automatic failover is enabled.</description>
    </property>
    <property>
        <name>dfs.nameservices</name>
        <value>mycluster</value>
        <description>Comma-separated list of nameservices.</description>
    </property>
    <property>
        <name>dfs.ha.namenodes.mycluster</name>
        <value>hadoop-master1,hadoop-master2</value>
        <description>The prefix for a given nameservice, contains a comma-separated list of namenodes for a given nameservice (eg mycluster).</description> 
    </property>
    <property>
        <name>dfs.namenode.rpc-address.mycluster.hadoop-master1</name>
        <value>10.0.0.1:8020</value>
        <description>RPC address that handles all clients requests. In the case of HA/Federation where multiple namenodes exist, the name service id is added to the name e.g. dfs.namenode.rpc-address.ns1 dfs.namenode.rpc-address.EXAMPLENAMESERVICE The value of this property will take the form of nn-host1:rpc-port.</description>
    </property>
    <property>  
        <name>dfs.namenode.rpc-address.mycluster.hadoop-master2</name>
        <value>10.0.0.3:8020</value>
        <description>RPC address that handles all clients requests. In the case of HA/Federation where multiple namenodes exist, the name service id is added to the name e.g. dfs.namenode.rpc-address.ns1 dfs.namenode.rpc-address.EXAMPLENAMESERVICE The value of this property will take the form of nn-host1:rpc-port.</description>
    </property>
    <property>
        <name>dfs.namenode.http-address.mycluster.hadoop-master1</name>
        <value>10.0.0.1:50070</value>
        <description>The address and the base port where the dfs namenode web ui will listen on.</description> 
    </property>
    <property>
        <name>dfs.n0menode.http-address.mycluster.hadoop-master2</name>
        <value>10.0.0.3:50070</value>
        <description>The address and the base port where the dfs namenode web ui will listen on.</description> 
    </property>
    <property>
        <name>dfs.namenode.shared.edits.dir</name>
        <value>qjournal://10.0.3.1:8485;10.0.3.3:8485;10.0.3.4:8485/mycluster</value>
A directory on shared storage between the multiple namenodes in an HA cluster. This directory will be written by the active and read by the standby in order to keep the namespaces synchronized. This directory does not need to be listed in dfs.namenode.edits.dir above. It should be left empty in a non-HA cluster. 
    </property>
    <property>
        <name>dfs.client.failover.proxy.provider.mycluster</name>
        <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
        <description>the Java class that HDFS clients use to contact the Active NameNode</description>
    </property>
    <property>
        <name>dfs.ha.fencing.methods</name>
        <value>sshfence</value>
        <description>SSH to the Active NameNode and kill the process</description>
    </property>
    <property>
        <name>dfs.ha.fencing.ssh.private-key-files</name>
        <value>/home/hdfs/.ssh/id_rsa</value>
        <description>a comma-separated list of SSH private key files</description>
    </property>
    <property>
        <name>dfs.journalnode.edits.dir</name>
        <value>/opt/hadoop/dfs/jn</value>
        <description>the path where the JournalNode daemon will store its local state</description>
    </property>
</configuration>
